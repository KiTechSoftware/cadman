################################################################
#
# Configuration sample for Cadman v0.
#
################################################################

################################################################
# Global configuration
################################################################
[global]
checkNewVersion = true
sendAnonymousUsage = true

[paths]
caddyfile        = "/etc/cadman/caddy/Caddyfile"
sites_dir        = "/etc/cadman/caddy/sites"
staging_dir      = "/etc/cadman/caddy/.staging"
state_file       = "/var/lib/cadman/state.json"
################################################################
# Entrypoints configuration
################################################################

# Entrypoints definition
#
# Optional
# Default:
[entryPoints]
[entryPoints.web]
  address = ":80"

[entryPoints.websecure]
  address = ":443"

################################################################
# Cadman logs configuration
################################################################

# Cadman logs
# Enabled by default and log to stdout
#
# Optional
#
[log]
# Log level
#
# Optional
# Default: "ERROR"
level = "DEBUG"

# Sets the filepath for the cadman log. If not specified, stdout will be used.
# Intermediate directories are created if necessary.
#
# Optional
# Default: os.Stdout
filePath = "log/cadman.log"

# Format is either "json" or "common".
#
# Optional
# Default: "common"
format = "json"

################################################################
# Access logs configuration
################################################################

# Enable access logs
# By default it will write to stdout and produce logs in the textual
# Common Log Format (CLF), extended with additional fields.
#
# Optional
#
# [accessLog]

  # Sets the file path for the access log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
  # filePath = "/path/to/log/log.txt"

  # Format is either "json" or "common".
  #
  # Optional
  # Default: "common"
  #
  # format = "json"

################################################################
# API and dashboard configuration
################################################################

# Enable API and dashboard
[api]

  # Enable the API in insecure mode
  #
  # Optional
  # Default: false
  #
  # insecure = true

  # Enabled Dashboard
  #
  # Optional
  # Default: true
  #
  # dashboard = false

################################################################
# Ping configuration
################################################################

# Enable ping
[ping]

  # Name of the related entry point
  #
  # Optional
  # Default: "cadman"
  #
  # entryPoint = "cadman"

################################################################
# Podman configuration backend
################################################################

# Enable Podman configuration backend
[providers.podman]
# Podman server endpoint. Can be a tcp or a unix socket endpoint.
#
# Required
# Default: "unix:///var/run/podman.sock"
# Accepts: "tcp://10.10.10.10:2375"
#
[providers.podman.sources.rootful]
enabled  = true
endpoint = "unix:///run/podman/podman.sock"
priority = 100

[[providers.podman.sources.rootless]]
enabled  = true
endpoint = "unix:///run/user/1000/podman/podman.sock"
priority = 50
name     = "uid1000"

[[providers.podman.sources.rootless]]
enabled  = false
endpoint = "unix:///run/user/1001/podman/podman.sock"

# Default host rule.
#
# Optional
# Default: "Host(`{{ normalize .Name }}`)"
#
defaultRule = "Host(`{{ normalize .Name }}.podman.localhost`)"

# Expose containers by default in cadman
#
# Optional
# Default: true
#
# exposedByDefault = false